#!/bin/bash
# ER2_filter 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of input_info_file: '$input_info_file'"
	echo "Value of input_phased_file: '$input_phased_file'"	
    echo "Value of ER2_cutoff: '$ER2_cutoff'"
    echo "Value of output_prefix: '$output_prefix'"

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    dx download "$input_info_file" -o input_info_file
	dx download "$input_phased_file" -o input_phased_file.vcf.gz

    # Fill in your application code here.
    # get a list of SNPs with EmpRsq<=0.9
	awk -v ER2_cutoff=$ER2_cutoff 'NR>1 && $11>=0 && $11<=ER2_cutoff{print $1}' input_info_file > excluded.SNPs

	# revisit merged phased file to exclude SNPs
	awk 'NR==FNR{snp[$1]=1;next} /^#/{print $0;next} {if(!($1":"$2":"$4":"$5 in snp || $1":"$2":"$5":"$4 in snp)){print $0}}' \
		excluded.SNPs \
		<(zcat input_phased_file.vcf.gz) \
		> ${output_prefix}.vcf

	gzip ${output_prefix}.vcf

    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    mkdir -p out/results
	mv ${output_prefix}.vcf.gz out/results/

    dx-upload-all-outputs
}
