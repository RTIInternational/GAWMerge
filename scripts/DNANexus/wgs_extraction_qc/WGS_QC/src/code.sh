#!/bin/bash
# WGS_QC 0.0.2
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://documentation.dnanexus.com/developer for tutorials on how
# to modify this file.

main() {

    echo "Value of vcf_file: '$vcf_file'"
    echo "Value of b38_SNPs: '$b38_SNPs'"
    echo "Value of b37_chromosomes: '$b37_chromosomes'"
    echo "Value of b37_positions: '$b37_positions'"
    echo "Value of b37_rsID: '$b37_rsID'"
    echo "Value of sample_keep: '$sample_keep'"
    echo "Value of chromosome: '$chr'"
    echo "Value of output_prefix: '$output_prefix'"

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".
    mkdir -p /data/

    dx download "$vcf_file" -o /data/vcf_file
	dx download "$sample_keep" -o /data/sample_keep
	dx download "$b38_SNPs" -o /data/b38_SNPs
    dx download "$b37_chromosomes" -o /data/b37_chromosomes
    dx download "$b37_positions" -o /data/b37_positions
    dx download "$b37_rsID" -o /data/b37_rsID

    # Fill in your application code here.
    #
    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

	echo "QC Num SNPs and Samples!" > /data/${output_prefix}.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.numbers.txt

    # exclude SNPs those not pass
    dx-docker run -v /data:/data rticode/plink:2.0 plink2 \
            --vcf /data/vcf_file \
            --keep-allele-order --vcf-idspace-to _ --const-fid --allow-extra-chr 0 \
            --set-missing-var-ids @:#:\$r:\$a \
            --new-id-max-allele-len 23 missing \
            --vcf-filter PASS \
            --make-bed \
            --out /data/$output_prefix.PASSOnly
	numSNPs=`wc -l /data/$output_prefix.PASSOnly.bim`
	numSamples=`wc -l /data/$output_prefix.PASSOnly.fam`
	echo "PASSOnly: ${numSNPs}; ${numSamples}" >> /data/${output_prefix}.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.numbers.txt

    mv /data/$output_prefix.PASSOnly.bim /data/$output_prefix.PASSOnly.bim.ori
    awk 'NR==FNR{rs[$3]=$4;next} {if($4 in rs) {$2=rs[$4];} print $0}' \
        /data/b38_SNPs \
        /data/$output_prefix.PASSOnly.bim.ori \
        > /data/$output_prefix.PASSOnly.bim
    
    # Identify and remove any duplicates (by ID and REF / ALT encoding)
    dx-docker run --rm -v /data:/data rticode/plink:2.0 plink2 \
            --bfile /data/$output_prefix.PASSOnly \
            --rm-dup 'exclude-all' list \
        --make-bed \
        --out /data/$output_prefix.PASSOnly.DupsRemoved
	numSNPs=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.bim`
	numSamples=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.fam`
	echo "DupsRemoved: ${numSNPs}; ${numSamples}" >> /data/${output_prefix}.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.numbers.txt
		
    # Update chromosomes to b37
    dx-docker run --rm -v /data:/data rticode/plink:1.9 plink \
        --bfile /data/$output_prefix.PASSOnly.DupsRemoved \
        --update-map /data/b37_chromosomes \
        --update-chr \
        --make-bed \
        --out /data/$output_prefix.PASSOnly.DupsRemoved.b37_chr
	numSNPs=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37_chr.bim`
	numSamples=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37_chr.fam`
	echo "b37_chr: ${numSNPs}; ${numSamples}" >> /data/${output_prefix}.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.numbers.txt
		
    # Update positions to b37
    dx-docker run --rm -v /data:/data rticode/plink:1.9 plink \
        --bfile /data/$output_prefix.PASSOnly.DupsRemoved.b37_chr \
        --update-map /data/b37_positions \
        --make-bed \
        --out /data/$output_prefix.PASSOnly.DupsRemoved.b37_chr.b37_pos
	numSNPs=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37_chr.b37_pos.bim`
	numSamples=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37_chr.b37_pos.fam`
	echo "b37_pos: ${numSNPs}; ${numSamples}" >> /data/${output_prefix}.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.numbers.txt

    # Extract b37 uniquely mapped SNPs
    dx-docker run --rm -v /data:/data rticode/plink:1.9 plink \
        --bfile /data/$output_prefix.PASSOnly.DupsRemoved.b37_chr.b37_pos \
        --extract /data/b37_rsID \
        --make-bed \
        --out /data/$output_prefix.PASSOnly.DupsRemoved.b37
	numSNPs=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37.bim`
	numSamples=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37.fam`
	echo "b37: ${numSNPs}; ${numSamples}" >> /data/${output_prefix}.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.numbers.txt
    
    # Extract Ancestry samples
    awk '{print "0\t"$2}' /data/sample_keep > /data/sample_keep.renamed

    dx-docker run --rm -v /data:/data rticode/plink:1.9 plink \
        --bfile /data/$output_prefix.PASSOnly.DupsRemoved.b37 \
        --keep /data/sample_keep.renamed \
        --make-bed \
        --out /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry
	numSNPs=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.bim`
	numSamples=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.fam`
	echo "Ancestry: ${numSNPs}; ${numSamples}" >> /data/${output_prefix}.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.numbers.txt
	
	# Calculate call rate
	dx-docker run --rm -v /data:/data rticode/plink:1.9 plink \
		--bfile /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry \
		--missing \
		--out /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing
	
	# Get list of SNPs with missing rate > 3% 
	tail -n +2 /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing.lmiss |
		perl -lane 'if ($F[4] > 0.03) { print $F[1]; }' | sort -u > \
		/data/snp_missing_rate_gt_3_pct.remove
	
	dx-docker run --rm -v /data:/data rticode/plink:1.9 plink \
		--bfile /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry \
		--exclude /data/snp_missing_rate_gt_3_pct.remove \
		--make-bed \
		--out /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing
	numSNPs=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing.bim`
	numSamples=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing.fam`
	echo "Missing Rate > 3%: ${numSNPs}; ${numSamples}" >> /data/${output_prefix}.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.numbers.txt
	
	# HWE QC
	dx-docker run --rm -v /data:/data rticode/plink:1.9 plink \
		--bfile /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing \
		--hardy \
		--out /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing.hardy
    
	# Get list of SNPs with HW p-value < 0.0001
	tail -n +2 /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing.hardy.hwe |
		perl -lane 'if ($F[2] eq "ALL(NP)" && $F[8] < 0.0001) { print $F[1]; }' | sort -u > \
		/data/hw_p_lt_10e-4.remove

	# Remove SNPs with HW p-value < 0.0001 
	dx-docker run --rm -v /data:/data rticode/plink:1.9 plink \
		--bfile /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing \
		--exclude /data/hw_p_lt_10e-4.remove \
		--make-bed \
		--out /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4
	numSNPs=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.bim`
	numSamples=`wc -l /data/$output_prefix.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.fam`
	echo "HW p-value < 0.0001: ${numSNPs}; ${numSamples}" >> /data/${output_prefix}.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.numbers.txt
 

    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.
    mkdir -p out/qc
    mv /data/${output_prefix}.PASSOnly.DupsRemoved.b37.ancestry.missing.hw_p_gte_1e-4.* out/qc/

    dx-upload-all-outputs

}
